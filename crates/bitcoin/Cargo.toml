[package]
name = "bitcoin"
version = "1.2.0"
authors = ["Interlay Ltd"]
edition = "2021"

[dependencies]
codec = { package = "parity-scale-codec", version = "3.1.5", default-features = false, features = ["derive", "max-encoded-len"] }
scale-info = { version = "2.2.0", default-features = false, features = ["derive"] }
serde = { version = "1.0.130", default-features = false, features = ["derive"] }
impl-serde = { version = "0.3.1", default-features = false }
sha2 = { version = "0.8.2", default-features = false }
hex = { version = "0.4.2", default-features = false }
spin = { version = "0.7.1", default-features = false }
primitive-types = { version = "0.12.1", default-features = false, features = ["codec", "scale-info"] }
bitcoin_hashes = { version = "0.7.3", default-features = false }
secp256k1 = { package = "secp256k1", git = "https://github.com/rust-bitcoin/rust-secp256k1", rev = "8e61874", default-features = false }
rust-bitcoin = { package = "bitcoin", version = "0.30.1", default-features = false, features = ["no-std"], optional = true }

[dev-dependencies]
mocktopus = "0.8.0"
secp256k1 = { package = "secp256k1", git = "https://github.com/rust-bitcoin/rust-secp256k1", rev = "8e61874", default-features = false, features = ["rand-std"] }
frame-support = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.31" }

[features]
default = ["std"]
std = [
	"codec/std",
	"impl-serde/std",
	"scale-info/std",
	"serde/std",
	"sha2/std",
	"hex/alloc",
	"primitive-types/std",
	"secp256k1/std",
	"rust-bitcoin?/std"
]
parser = []
runtime-benchmarks = []
bitcoin-types-compat = ["rust-bitcoin", "parser"]

[[example]]
name = "parse-transaction"
required-features = ["parser"]

[[example]]
name = "run-proof"
required-features = ["parser"]